[gd_scene load_steps=40 format=3 uid="uid://jiogcr63af3e"]

[ext_resource type="Texture2D" uid="uid://dnm7uidfr75yu" path="res://Assets/Player/hazmat-Sheet.png" id="1_3vyb7"]

[sub_resource type="GDScript" id="GDScript_g2els"]
script/source = "extends CharacterBody2D
@onready var animated_sprite_2d: AnimatedSprite2D = $AnimatedSprite2D

@export var movment_speed : float = 250
@export var holding_distance : float = 80
var character_dierection : Vector2

enum directions {LEFT, RIGHT, UP, DOWN}
var current_direction : directions

var is_in_range: bool = false
var target_object : StaticBody2D
var held_object : StaticBody2D


@onready var hand_pos: Marker2D = $HandPos
@onready var character_body_2d: CharacterBody2D = $\".\"


func _physics_process(delta):
	_update_zIndexis()
	pickup_object()
	drop_object()
	#Input into vector
	character_dierection.x = Input.get_axis(\"moveLeft\",\"moveRight\")
	character_dierection.y = Input.get_axis(\"moveUp\",\"moveDown\")
	#Make diagonla speed equal to dierectional speed
	character_dierection = character_dierection.normalized()
	
	#Flip
	#if character_dierection.x > 0: %sprite.flip_h = false
	#elif character_dierection.x < 0: %sprite.flip_h = true
	
	_update_current_direction()
	
	# modify hand position
	_set_hand_position()
	
	if character_dierection:
		velocity = character_dierection * movment_speed
		#if %charSprite.animation != \"Walking\": %charSprite.animation = \"Walking\"
	else:
		velocity = velocity.move_toward(Vector2.ZERO, movment_speed)
		#if %charSprite.animation != \"Idel\": %charSprite.animation = \"Idel\"
	move_and_slide()
	_play_animation()

func pickup_object() -> void :
	if is_in_range:
		if Input.is_action_just_pressed(\"pickup\") and !held_object:
			held_object = target_object
			held_object.reparent(hand_pos)
			held_object.position = Vector2.ZERO
			held_object.collision_layer = 2

func drop_object() -> void :
	if Input.is_action_just_pressed(\"drop\") and held_object:
		held_object.reparent(get_parent())
		_changeHeldObjectPosition()
		held_object.collision_layer = 1
		_reset_zIndexis()
		held_object = null

func _changeHeldObjectPosition() -> void:
	_update_Node2D_pos(held_object)

func _on_pickup_range_body_entered(body: Node2D) -> void:
	if body.has_node(\"PickableComponent\"):
		is_in_range = true;
		target_object = body;

func _on_pickup_range_body_exited(body: Node2D) -> void:
	if body.has_node(\"PickableComponent\"):
		is_in_range = false;
		target_object = null;

func _update_current_direction() -> void:
	if character_dierection.x > 0:
		current_direction = directions.RIGHT
	elif character_dierection.x < 0:
		current_direction = directions.LEFT
	elif character_dierection.x == 0:
		if character_dierection.y < 0:
			current_direction = directions.UP
		if character_dierection.y > 0:
			current_direction = directions.DOWN

func _update_Node2D_pos(body:Node2D)->void:
	match current_direction:
		directions.LEFT:
			body.position = position + Vector2.LEFT * holding_distance
		directions.RIGHT:
			body.position = position + Vector2.RIGHT * holding_distance
		directions.UP:
			body.position = position + Vector2.UP * holding_distance
		directions.DOWN:
			body.position = position + Vector2.DOWN * holding_distance

func _set_hand_position()->void:
	match current_direction:
		directions.LEFT:
			hand_pos.position = Vector2.LEFT * holding_distance
		directions.RIGHT:
			hand_pos.position = Vector2.RIGHT * holding_distance
		directions.UP:
			hand_pos.position = Vector2.UP * holding_distance
		directions.DOWN:
			hand_pos.position = Vector2.DOWN * holding_distance

func _update_zIndexis()->void:
	match current_direction:
		directions.UP:
			if held_object:
				held_object.z_index = -1
		directions.DOWN:
			if held_object:
				held_object.z_index = 1
		_:
			if held_object:
				held_object.z_index = 0

func _reset_zIndexis() ->void:
	if held_object:
		held_object.z_index = 1

func _play_animation()->void:
	match  current_direction:
		directions.LEFT:
			animated_sprite_2d.play(\"IDLELeft\")
		directions.RIGHT:
			animated_sprite_2d.play(\"IDLERight\")
		directions.UP:
			if character_dierection:
				animated_sprite_2d.play(\"RunningUP\")
			else :
				animated_sprite_2d.play(\"IDLEUp\")
		directions.DOWN:
			if character_dierection:
				animated_sprite_2d.play(\"RunningDown\")
			else :
				animated_sprite_2d.play(\"IDLEDown\")
	
"

[sub_resource type="AtlasTexture" id="AtlasTexture_g2els"]
atlas = ExtResource("1_3vyb7")
region = Rect2(0, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_qhqgy"]
atlas = ExtResource("1_3vyb7")
region = Rect2(96, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_dqkch"]
atlas = ExtResource("1_3vyb7")
region = Rect2(64, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_qlg0r"]
atlas = ExtResource("1_3vyb7")
region = Rect2(32, 0, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_tuyoq"]
atlas = ExtResource("1_3vyb7")
region = Rect2(0, 128, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_fjrip"]
atlas = ExtResource("1_3vyb7")
region = Rect2(32, 128, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_smehm"]
atlas = ExtResource("1_3vyb7")
region = Rect2(64, 128, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_ur7pv"]
atlas = ExtResource("1_3vyb7")
region = Rect2(96, 128, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_y4r1p"]
atlas = ExtResource("1_3vyb7")
region = Rect2(128, 128, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_d2wvv"]
atlas = ExtResource("1_3vyb7")
region = Rect2(160, 128, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_3v2ag"]
atlas = ExtResource("1_3vyb7")
region = Rect2(192, 128, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_jej6c"]
atlas = ExtResource("1_3vyb7")
region = Rect2(224, 128, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_f1ej7"]
atlas = ExtResource("1_3vyb7")
region = Rect2(0, 160, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_oprun"]
atlas = ExtResource("1_3vyb7")
region = Rect2(32, 160, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_a8ls1"]
atlas = ExtResource("1_3vyb7")
region = Rect2(64, 160, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_qfm1y"]
atlas = ExtResource("1_3vyb7")
region = Rect2(96, 160, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_fulsm"]
atlas = ExtResource("1_3vyb7")
region = Rect2(128, 160, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_4r5pv"]
atlas = ExtResource("1_3vyb7")
region = Rect2(160, 160, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_60mlk"]
atlas = ExtResource("1_3vyb7")
region = Rect2(192, 160, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_i4ail"]
atlas = ExtResource("1_3vyb7")
region = Rect2(0, 192, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_a38lo"]
atlas = ExtResource("1_3vyb7")
region = Rect2(32, 192, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_4ni07"]
atlas = ExtResource("1_3vyb7")
region = Rect2(64, 192, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_l71n6"]
atlas = ExtResource("1_3vyb7")
region = Rect2(96, 192, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_ke2ow"]
atlas = ExtResource("1_3vyb7")
region = Rect2(128, 192, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_ujl30"]
atlas = ExtResource("1_3vyb7")
region = Rect2(160, 192, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_31cv2"]
atlas = ExtResource("1_3vyb7")
region = Rect2(192, 192, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_pf23h"]
atlas = ExtResource("1_3vyb7")
region = Rect2(224, 192, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_dt7fs"]
atlas = ExtResource("1_3vyb7")
region = Rect2(0, 224, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_wqfne"]
atlas = ExtResource("1_3vyb7")
region = Rect2(32, 224, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_wnwbv"]
atlas = ExtResource("1_3vyb7")
region = Rect2(64, 224, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_gl8cc"]
atlas = ExtResource("1_3vyb7")
region = Rect2(96, 224, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_487ah"]
atlas = ExtResource("1_3vyb7")
region = Rect2(128, 224, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_md1ol"]
atlas = ExtResource("1_3vyb7")
region = Rect2(160, 224, 32, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_bj30b"]
atlas = ExtResource("1_3vyb7")
region = Rect2(192, 224, 32, 32)

[sub_resource type="SpriteFrames" id="SpriteFrames_jc3p3"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_g2els")
}],
"loop": true,
"name": &"IDLEDown",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_qhqgy")
}],
"loop": true,
"name": &"IDLELeft",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_dqkch")
}],
"loop": true,
"name": &"IDLERight",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_qlg0r")
}],
"loop": true,
"name": &"IDLEUp",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_tuyoq")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_fjrip")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_smehm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ur7pv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_y4r1p")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_d2wvv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3v2ag")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_jej6c")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_f1ej7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_oprun")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_a8ls1")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qfm1y")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_fulsm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4r5pv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_60mlk")
}],
"loop": true,
"name": &"RunningDown",
"speed": 60.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_i4ail")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_a38lo")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4ni07")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_l71n6")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ke2ow")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ujl30")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_31cv2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pf23h")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dt7fs")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_wqfne")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_wnwbv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gl8cc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_487ah")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_md1ol")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bj30b")
}],
"loop": true,
"name": &"RunningUP",
"speed": 60.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_qhqgy"]
size = Vector2(14, 28)

[sub_resource type="CircleShape2D" id="CircleShape2D_2jmuu"]
radius = 36.0

[node name="Player" type="CharacterBody2D"]
z_index = 5
motion_mode = 1
script = SubResource("GDScript_g2els")
holding_distance = 20.0

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
sprite_frames = SubResource("SpriteFrames_jc3p3")
animation = &"RunningDown"
frame_progress = 0.418215

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
shape = SubResource("RectangleShape2D_qhqgy")

[node name="Camera2D" type="Camera2D" parent="."]
zoom = Vector2(2, 2)

[node name="PickupRange" type="Area2D" parent="."]
visible = false

[node name="CollisionShape2D2" type="CollisionShape2D" parent="PickupRange"]
shape = SubResource("CircleShape2D_2jmuu")

[node name="HandPos" type="Marker2D" parent="."]
gizmo_extents = 0.0

[connection signal="body_entered" from="PickupRange" to="." method="_on_pickup_range_body_entered"]
[connection signal="body_exited" from="PickupRange" to="." method="_on_pickup_range_body_exited"]
